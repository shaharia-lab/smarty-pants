name: Pull Request Checks

on:
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  check-changes:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      pull-requests: read
    outputs:
      backend: ${{ steps.filter.outputs.backend }}
      frontend: ${{ steps.filter.outputs.frontend }}
      goreleaser: ${{ steps.filter.outputs.goreleaser }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          token: ${{ github.token }}
          filters: |
            backend:
              - 'backend/**'
            frontend:
              - 'frontend/**'
            goreleaser:
              - 'backend/.goreleaser.yaml'
              - 'backend/goreleaser.dockerfile'

  backend-unit-test:
    needs: check-changes
    if: ${{ needs.check-changes.outputs.backend == 'true' }}
    name: Backend Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 20
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.22'
      - name: Run Backend Tests
        run: make backend-test

      - name: Publish artifacts
        uses: actions/upload-artifact@v3
        with:
          name: backend-coverage-pr${{ github.event.pull_request.number }}-${{ github.sha }}
          path: backend/coverage_unit.out
          retention-days: 1

  frontend-unit-test:
    needs: check-changes
    if: ${{ needs.check-changes.outputs.frontend == 'true' }}
    name: Frontend Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
      - name: Install Frontend Dependencies
        run: |
          cd frontend/smarty-pants
          npm ci
      - name: Run Frontend Tests
        run: make frontend-test

      - name: Publish artifacts
        uses: actions/upload-artifact@v3
        with:
          name: frontend-coverage-pr${{ github.event.pull_request.number }}-${{ github.sha }}
          path: frontend/smarty-pants/coverage/lcov.info
          retention-days: 1

  lint:
    name: Linting
    permissions:
      contents: read
      pull-requests: write
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v5
        with:
          go-version: '^1.22'
          check-latest: true
          cache: true
          go-version-file: 'backend/go.mod'
          cache-dependency-path: |
            backend/go.sum

      - name: Lint Code Base
        uses: github/super-linter/slim@v4
        continue-on-error: true
        env:
          VALIDATE_ALL_CODEBASE: false
          DEFAULT_BRANCH: main
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  code-analysis:
    runs-on: ubuntu-latest
    needs: [check-changes, backend-unit-test, frontend-unit-test]
    if: ${{ needs.check-changes.outputs.backend == 'true' || needs.check-changes.outputs.frontend == 'true' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download frontend coverage
        uses: actions/download-artifact@v3
        with:
          name: frontend-coverage-pr${{ github.event.pull_request.number }}-${{ github.sha }}
          path: frontend/smarty-pants/coverage
        continue-on-error: true

      - name: Download backend coverage
        uses: actions/download-artifact@v3
        with:
          name: backend-coverage-pr${{ github.event.pull_request.number }}-${{ github.sha }}
          path: backend
        continue-on-error: true

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  release:
    name: Test Release
    needs:
      - check-changes
    if: ${{ needs.check-changes.outputs.goreleaser == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - uses: actions/setup-go@v3
        with:
          go-version: '^1.22'

      - uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Create temporary tag
        run: |
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git tag -a v${{ github.run_number }}.0.0 -m "Test tag for GoReleaser"

      - uses: goreleaser/goreleaser-action@v6
        with:
          version: '~> v2'
          args: release --skip=publish --clean --fail-fast --verbose
          workdir: backend
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
